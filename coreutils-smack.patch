diff -rup coreutils-8.16/src/ls.c coreutils-smack/src/ls.c
--- coreutils-8.16/src/ls.c	2012-03-24 21:26:51.000000000 +0100
+++ coreutils-smack/src/ls.c	2012-04-07 18:51:19.895016169 +0200
@@ -37,6 +37,7 @@
 
 #include <config.h>
 #include <sys/types.h>
+#include <attr/xattr.h>
 
 #include <termios.h>
 #if HAVE_STROPTS_H
@@ -220,6 +221,9 @@ struct fileinfo
 
     /* For color listings, true if a regular file has capability info.  */
     bool has_capability;
+
+    /* Smack label */
+    char smack[24];
   };
 
 #define LEN_STR_PAIR(s) sizeof (s) - 1, s
@@ -689,6 +693,10 @@ static size_t tabsize;
 
 static bool print_dir_name;
 
+/* True means print the SMACK attribute.  */
+
+static bool print_smack;
+
 /* The line length to use for breaking lines in many-per-line format.
    Can be set with -w.  */
 
@@ -827,6 +835,7 @@ static struct option const long_options[
   {"ignore", required_argument, NULL, 'I'},
   {"indicator-style", required_argument, NULL, INDICATOR_STYLE_OPTION},
   {"dereference", no_argument, NULL, 'L'},
+  {"smack", no_argument, NULL, 'M'},
   {"literal", no_argument, NULL, 'N'},
   {"quote-name", no_argument, NULL, 'Q'},
   {"quoting-style", required_argument, NULL, QUOTING_STYLE_OPTION},
@@ -1636,7 +1645,7 @@ decode_switches (int argc, char **argv)
     {
       int oi = -1;
       int c = getopt_long (argc, argv,
-                           "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1",
+                           "abcdfghiklmnopqrstuvw:xABCDFGHI:LMNQRST:UXZ1",
                            long_options, &oi);
       if (c == -1)
         break;
@@ -1799,6 +1808,10 @@ decode_switches (int argc, char **argv)
           dereference = DEREF_ALWAYS;
           break;
 
+        case 'M':
+          print_smack = true;
+          break;
+
         case 'N':
           set_quoting_style (NULL, literal_quoting_style);
           break;
@@ -3157,6 +3170,17 @@ gobble_file (char const *name, enum file
                 file_size_width = len;
             }
         }
+
+      if (print_smack)
+        {
+          ssize_t err = getxattr (absolute_name, "security.SMACK64", f->smack, sizeof(f->smack));
+          if (err < 0)
+            {
+              perror(absolute_name);
+              f->smack[0] = '?';
+              f->smack[1] = '\0';
+            }
+        }
     }
 
   if (print_inode)
@@ -3811,6 +3835,12 @@ print_long_format (const struct fileinfo
 
   p = buf;
 
+  if (print_smack)
+    {
+      sprintf(p, "%-8s", f->smack);
+      p += 8;
+    }
+
   if (print_inode)
     {
       char hbuf[INT_BUFSIZE_BOUND (uintmax_t)];
